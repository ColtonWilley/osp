From ffd73b30e9c917c30ef6243e6d38be5ea63fcec9 Mon Sep 17 00:00:00 2001
From: Juliusz Sosinowicz <juliusz@wolfssl.com>
Date: Tue, 14 Sep 2021 13:37:02 +0200
Subject: [PATCH] Patch for Kerberos 5 1.16.1

- Use `PKG_CHECK_MODULES` and `PKG_CHECK_VAR` to find wolfSSL and configure compilation options
- Rename `WANT_READ` and `WANT_WRITE` to `K5_WANT_READ` and `K5_WANT_WRITE` respectively to avoid conflicts with wolfSSL
- Remove Camellia tests as wolfSSL does not support it in the EVP layer

Compile wolfSSL with:
```
./autogen.sh
./configure --enable-krb
make
make install
```

Kerberos 1.16.1 maybe downloaded and extracted with:
```
wget https://web.mit.edu/kerberos/dist/krb5/1.16/krb5-1.16.1.tar.gz
tar -xvf krb5-1.16.1.tar.gz
```

Compile krb5 with
```
patch -p1 < <path/to/this/patch>
cd src
autoreconf -ivf
./configure --with-crypto-impl=wolfssl --with-tls-impl=wolfssl --disable-pkinit
touch lib/crypto/openssl/camellia/OBJS.SH
make
```

wolfSSL does not support using the `pkinit` plugin for Kerberos 5

All tests should pass run with
```
make check
```
---
 src/Makefile.in                               |   19 +-
 src/aclocal.m4                                |    1 +
 src/configure.in                              |   69 ++
 src/include/k5-tls.h                          |    2 +-
 .../crypto_tests/camellia-expect-vt.txt       | 1037 +----------------
 src/lib/crypto/crypto_tests/camellia-test.c   |    4 +
 src/lib/crypto/crypto_tests/t_cksums.c        |    2 +
 src/lib/crypto/crypto_tests/t_cmac.c          |    6 +
 src/lib/crypto/crypto_tests/t_decrypt.c       |    2 +
 src/lib/crypto/crypto_tests/t_derive.c        |    2 +
 src/lib/crypto/crypto_tests/t_encrypt.c       |    3 +
 src/lib/crypto/crypto_tests/t_short.c         |    2 +
 src/lib/crypto/crypto_tests/t_str2key.c       |    2 +
 src/lib/crypto/openssl/Makefile.in            |    4 +
 .../crypto/openssl/enc_provider/camellia.c    |   18 +
 src/lib/krb5/os/sendto_kdc.c                  |    8 +-
 src/m4/pkg.m4                                 |  344 ++++++
 src/plugins/preauth/pkinit/Makefile.in        |    5 +
 src/plugins/tls/k5tls/openssl.c               |    8 +-
 src/tests/dejagnu/config/default.exp          |   24 -
 src/tests/gssapi/t_prf.c                      |    2 +
 21 files changed, 489 insertions(+), 1075 deletions(-)
 create mode 100644 src/m4/pkg.m4

diff --git a/src/Makefile.in b/src/Makefile.in
index ac9a2a0604..8f6e78992f 100644
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -24,11 +24,14 @@ SUBDIRS=util include lib \
 	plugins/kdb/test \
 	plugins/kdcpolicy/test \
 	plugins/preauth/otp \
-	plugins/preauth/pkinit \
 	plugins/preauth/test \
 	plugins/tls/k5tls \
 	kdc kadmin slave clients appl tests \
 	config-files build-tools man doc @po@
+ifeq ($(CRYPTO_IMPL_WOLFSSL),yes)
+SUBDIRS += \
+	plugins/preauth/pkinit
+endif
 WINSUBDIRS=include util lib ccapi windows clients appl
 BUILDTOP=$(REL).
 
@@ -623,11 +626,6 @@ OTHEREXCLUDES = \
 	plugins/kdb/db2/pol_xdr.c \
 	plugins/kdb/ldap/libkdb_ldap/princ_xdr.c \
 	plugins/kdb/ldap/libkdb_ldap/princ_xdr.h \
-	plugins/preauth/pkinit/pkcs11.h \
-	plugins/preauth/pkinit/pkinit_accessor.h \
-	plugins/preauth/pkinit/pkinit_crypto.h \
-	plugins/preauth/pkinit/pkinit.h \
-	plugins/preauth/pkinit/pkinit_crypto_openssl.h \
 	tests/asn.1/ktest.h \
 	tests/asn.1/ktest_equal.h \
 	tests/asn.1/utility.h \
@@ -642,6 +640,15 @@ OTHEREXCLUDES = \
 	util/verto \
 	util/k5ev \
 	util/wshelper
+	
+ifeq ($(CRYPTO_IMPL_WOLFSSL),yes)
+OTHEREXCLUDES += \
+	plugins/preauth/pkinit/pkcs11.h \
+	plugins/preauth/pkinit/pkinit_accessor.h \
+	plugins/preauth/pkinit/pkinit_crypto.h \
+	plugins/preauth/pkinit/pkinit.h \
+	plugins/preauth/pkinit/pkinit_crypto_openssl.h 
+endif
 
 EXCLUDES = `for i in $(BSDFILES) $(OTHEREXCLUDES); do echo $$i; done | $(AWK) '{ print "-path", $$1, "-o" }'` -path /dev/null
 
diff --git a/src/aclocal.m4 b/src/aclocal.m4
index d6d1279c3f..a3df69d289 100644
--- a/src/aclocal.m4
+++ b/src/aclocal.m4
@@ -1696,3 +1696,4 @@ AC_DEFUN(KRB5_AC_PERSISTENT_KEYRING,[
       ]))
 ])dnl
 dnl
+m4_include([m4/pkg.m4])
\ No newline at end of file
diff --git a/src/configure.in b/src/configure.in
index 10f45eb12e..cef6052cfe 100644
--- a/src/configure.in
+++ b/src/configure.in
@@ -246,6 +246,7 @@ AC_SUBST(audit_plugin)
 
 # WITH_CRYPTO_IMPL
 
+CRYPTO_IMPL_WOLFSSL=no
 CRYPTO_IMPL="builtin"
 AC_ARG_WITH([crypto-impl],
 AC_HELP_STRING([--with-crypto-impl=IMPL], [use specified crypto implementation @<:@builtin@:>@]),
@@ -258,6 +259,35 @@ builtin)
 openssl)
   AC_CHECK_LIB(crypto, PKCS7_get_signer_info)
   ;;
+wolfssl)
+  CRYPTO_IMPL=openssl
+  CRYPTO_IMPL_WOLFSSL=yes
+  if test -z "${WOLFSSL_CFLAGS}" -a -z "${WOLFSSL_LIBS}"; then
+	# If the user did not explicitly specify flags, try to autodetect.
+    PKG_CHECK_MODULES(
+      [WOLFSSL],
+      [wolfssl],
+      [WOLFSSL_FOUND=yes],
+      [WOLFSSL_FOUND=no]
+    )
+    PKG_CHECK_VAR(
+      [WOLFSSL_INCLUDEDIR],
+      [wolfssl],
+      [includedir],
+      [WOLFSSL_FOUND=yes],
+      [WOLFSSL_FOUND=no]
+    )
+    if test "x$WOLFSSL_FOUND" = "xno" ; then
+      AC_MSG_ERROR([wolfSSL not found!])
+    fi
+    WOLFSSL_CFLAGS="${WOLFSSL_CFLAGS} -I${WOLFSSL_INCLUDEDIR}/wolfssl"
+  fi
+  CFLAGS="${CFLAGS} ${WOLFSSL_CFLAGS}"
+  LIBS="${LIBS} ${WOLFSSL_LIBS}"
+  AC_CHECK_LIB(wolfssl, PKCS7_get_signer_info)
+  AC_DEFINE(HAVE_LIBCRYPTO, 1, [wolfSSL])
+  AC_DEFINE(EXTERNAL_OPTS_OPENVPN, 1, [wolfSSL options.h include])
+  ;;
 *)
   AC_MSG_ERROR([Unknown crypto implementation $withval])
   ;;
@@ -266,6 +296,9 @@ AC_CONFIG_COMMANDS(CRYPTO_IMPL, , CRYPTO_IMPL=$CRYPTO_IMPL)
 AC_SUBST(CRYPTO_IMPL)
 AC_SUBST(CRYPTO_IMPL_CFLAGS)
 AC_SUBST(CRYPTO_IMPL_LIBS)
+AC_SUBST(CRYPTO_IMPL_WOLFSSL)
+# Might not be necessary
+AC_CONFIG_COMMANDS(CRYPTO_IMPL_WOLFSSL, , CRYPTO_IMPL_WOLFSSL=$CRYPTO_IMPL_WOLFSSL)
 
 AC_ARG_WITH([prng-alg],
 AC_HELP_STRING([--with-prng-alg=ALG], [use specified PRNG algorithm. @<:@fortuna@:>@]),
@@ -285,6 +318,36 @@ AC_HELP_STRING([--with-tls-impl=IMPL],
                [use specified TLS implementation @<:@auto@:>@]),
 [TLS_IMPL=$withval],[TLS_IMPL=auto])
 case "$TLS_IMPL" in
+wolfssl)
+  if test -z "${WOLFSSL_CFLAGS}" -a -z "${WOLFSSL_LIBS}"; then
+	# If the user did not explicitly specify flags, try to autodetect.
+    PKG_CHECK_MODULES(
+      [WOLFSSL],
+      [wolfssl],
+      [WOLFSSL_FOUND=yes],
+      [WOLFSSL_FOUND=no]
+    )
+    PKG_CHECK_VAR(
+      [WOLFSSL_INCLUDEDIR],
+      [wolfssl],
+      [includedir],
+      [WOLFSSL_FOUND=yes],
+      [WOLFSSL_FOUND=no]
+    )
+    if test "x$WOLFSSL_FOUND" = "xno" ; then
+      AC_MSG_ERROR([wolfSSL not found!])
+    fi
+    WOLFSSL_CFLAGS="${WOLFSSL_CFLAGS} -I${WOLFSSL_INCLUDEDIR}/wolfssl"
+  fi
+  CFLAGS="${CFLAGS} ${WOLFSSL_CFLAGS}"
+  LIBS="${LIBS} ${WOLFSSL_LIBS}"
+  TLS_IMPL_LIBS="${WOLFSSL_LIBS}"
+  TLS_IMPL=openssl
+  AC_CHECK_LIB(wolfssl, wolfSSL_CTX_new)
+  AC_MSG_NOTICE([TLS module will use wolfSSL])
+  AC_DEFINE(TLS_IMPL_OPENSSL, 1, [wolfSSL])
+  AC_DEFINE(EXTERNAL_OPTS_OPENVPN, 1, [wolfSSL options.h include])
+  ;;
 openssl|auto)
   AC_CHECK_LIB(ssl,SSL_CTX_new,[have_lib_ssl=true],[have_lib_ssl=false],
                -lcrypto)
@@ -1050,6 +1113,9 @@ if test "$enable_pkinit" = yes || test "$enable_pkinit" = try; then
 #endif
 int i = 1;
 ])], k5_cv_openssl_version_okay=yes, k5_cv_openssl_version_okay=no)])
+  if test "$CRYPTO_IMPL_WOLFSSL" = yes; then
+    AC_MSG_ERROR([No CMS API support with wolfSSL.])
+  fi
   old_LIBS="$LIBS"
   AC_CHECK_LIB(crypto, PKCS7_get_signer_info)
   LIBS="$old_LIBS"
@@ -1457,3 +1523,6 @@ dnl	ccapi ccapi/lib ccapi/lib/unix ccapi/server ccapi/server/unix ccapi/test
 	tests/gss-threads tests/misc
 	po
 )
+
+echo cflags: $CFLAGS
+echo libs: $LIBS
\ No newline at end of file
diff --git a/src/include/k5-tls.h b/src/include/k5-tls.h
index 0661c05882..a5597eb46c 100644
--- a/src/include/k5-tls.h
+++ b/src/include/k5-tls.h
@@ -47,7 +47,7 @@
 typedef struct k5_tls_handle_st *k5_tls_handle;
 
 typedef enum {
-    DATA_READ, DONE, WANT_READ, WANT_WRITE, ERROR_TLS
+    DATA_READ, DONE, K5_WANT_READ, K5_WANT_WRITE, ERROR_TLS
 } k5_tls_status;
 
 /*
diff --git a/src/lib/crypto/crypto_tests/camellia-expect-vt.txt b/src/lib/crypto/crypto_tests/camellia-expect-vt.txt
index e6ebe8a810..0ceca69d10 100644
--- a/src/lib/crypto/crypto_tests/camellia-expect-vt.txt
+++ b/src/lib/crypto/crypto_tests/camellia-expect-vt.txt
@@ -1,1036 +1 @@
-
-KEYSIZE=128
-
-KEY=00000000000000000000000000000000
-
-I=1
-PT=80000000000000000000000000000000
-CT=07923A39EB0A817D1C4D87BDB82D1F1C
-
-I=2
-PT=40000000000000000000000000000000
-CT=48CD6419809672D2349260D89A08D3D3
-
-I=3
-PT=20000000000000000000000000000000
-CT=D07493CCB2E95CE0B4945A05ACC97D82
-
-I=4
-PT=10000000000000000000000000000000
-CT=5DBE1EAC9F7080A88DBED7F6DA101448
-
-I=5
-PT=08000000000000000000000000000000
-CT=F01EE477D199DF2701027034B229622F
-
-I=6
-PT=04000000000000000000000000000000
-CT=C841587ABD9A912E563774CB569D051E
-
-I=7
-PT=02000000000000000000000000000000
-CT=1D9BC0C04546F0915C8CCD11391A455C
-
-I=8
-PT=01000000000000000000000000000000
-CT=05E6EBB4BA167F5C479CEFF3152F943B
-
-I=9
-PT=00800000000000000000000000000000
-CT=93211E0F788845B9FC0E4551FFE92AC9
-
-I=10
-PT=00400000000000000000000000000000
-CT=B6D35701CD8FADDE383BBE8E6B70BAF7
-
-I=11
-PT=00200000000000000000000000000000
-CT=8358F9F4EBCFEE348CB30551ACB151A0
-
-I=12
-PT=00100000000000000000000000000000
-CT=D57516EB5AD93C523E40521BF447AFCE
-
-I=13
-PT=00080000000000000000000000000000
-CT=66B2534C279C439133F52E5AD8B439A9
-
-I=14
-PT=00040000000000000000000000000000
-CT=A71C69184A9F63C2992A5F18F77C1FE9
-
-I=15
-PT=00020000000000000000000000000000
-CT=1ADCBE49AEACB9ECEBBD492B10E82C7B
-
-I=16
-PT=00010000000000000000000000000000
-CT=27E3BCFB227C5561DB6CF7FC30387036
-
-I=17
-PT=00008000000000000000000000000000
-CT=F4AE20365CC9D06B0CAE6B695ED2CEC1
-
-I=18
-PT=00004000000000000000000000000000
-CT=3DD682F0B641ED32AD3D43EA2A0456E4
-
-I=19
-PT=00002000000000000000000000000000
-CT=6E5D14A95ECC290B509EA6B673652E3A
-
-I=20
-PT=00001000000000000000000000000000
-CT=F1CDF0F8D7B3FFD95422D7CC0CF40B7B
-
-I=21
-PT=00000800000000000000000000000000
-CT=A9253D459A34C385A1F1B2CFFA3935C5
-
-I=22
-PT=00000400000000000000000000000000
-CT=291024D99FF09A47A1DEE45BA700AE52
-
-I=23
-PT=00000200000000000000000000000000
-CT=49241D9459B277187BB10081C60361C0
-
-I=24
-PT=00000100000000000000000000000000
-CT=AD9BA365CC4DD5553D2D9FE303841D88
-
-I=25
-PT=00000080000000000000000000000000
-CT=C2ECA616664A249DC622CC11196B4AE1
-
-I=26
-PT=00000040000000000000000000000000
-CT=6E1A2D4794BB0DC08777A0BC7523E70E
-
-I=27
-PT=00000020000000000000000000000000
-CT=6DB1F0CF59656BDD235E82B8CEF0BE8E
-
-I=28
-PT=00000010000000000000000000000000
-CT=52F239C5EAF401EBDC54D2F011FF4B6A
-
-I=29
-PT=00000008000000000000000000000000
-CT=6B58A08F648414B67FD6847D2AA51CBF
-
-I=30
-PT=00000004000000000000000000000000
-CT=2959DD5367885A75EB48053CF3251A36
-
-I=31
-PT=00000002000000000000000000000000
-CT=630B292E3B88EF641CDFD531E206605E
-
-I=32
-PT=00000001000000000000000000000000
-CT=4BBB88EF82B70593FCC56AFD91540FDB
-
-I=33
-PT=00000000800000000000000000000000
-CT=0A13055B118A45C606999257BD191426
-
-I=34
-PT=00000000400000000000000000000000
-CT=5CF8E5C9F15D7E4F865020224853EB77
-
-I=35
-PT=00000000200000000000000000000000
-CT=3898805042C7A4315C5EE51AF2DE47E2
-
-I=36
-PT=00000000100000000000000000000000
-CT=8D3F96372E87CBB0B375425B3A10B9E7
-
-I=37
-PT=00000000080000000000000000000000
-CT=4D9510A378BD784A70A66BCC75B7D3C8
-
-I=38
-PT=00000000040000000000000000000000
-CT=70DB1902D37CFBDFB98F7C516F79D416
-
-I=39
-PT=00000000020000000000000000000000
-CT=383C6C2AABEF7FDE25CD470BF774A331
-
-I=40
-PT=00000000010000000000000000000000
-CT=47CBCB5288349B1A15DC9F81FBEE6B8F
-
-I=41
-PT=00000000008000000000000000000000
-CT=21DA34D4468EEB13AED95DAE0FF48310
-
-I=42
-PT=00000000004000000000000000000000
-CT=021C9A8E6BD36FBD036411E5D852A80F
-
-I=43
-PT=00000000002000000000000000000000
-CT=6A459E2F839AF60ACDE83774D0BB5574
-
-I=44
-PT=00000000001000000000000000000000
-CT=C19255121F1B933CAE09E58AEC0E9977
-
-I=45
-PT=00000000000800000000000000000000
-CT=7BA949E27B2BE148A6B801F9305F43D5
-
-I=46
-PT=00000000000400000000000000000000
-CT=E8CEB1026BCF7BCEA32E8A380EA76DB7
-
-I=47
-PT=00000000000200000000000000000000
-CT=63F97747ED56A8F521B20CC65F6F9465
-
-I=48
-PT=00000000000100000000000000000000
-CT=2091CFDC629819106188424AC694F75B
-
-I=49
-PT=00000000000080000000000000000000
-CT=A91BDF8E8B88407942423CCE000527C4
-
-I=50
-PT=00000000000040000000000000000000
-CT=73F9B44B9635A3FD683DBF8D49E9825B
-
-I=51
-PT=00000000000020000000000000000000
-CT=9DC64B2133FAD5069FD9A7CC2FFFD1CC
-
-I=52
-PT=00000000000010000000000000000000
-CT=28240F81FEC36B71E13F1FEA7A7641E3
-
-I=53
-PT=00000000000008000000000000000000
-CT=20DD39FEE96CD2EFF972872A692B28FD
-
-I=54
-PT=00000000000004000000000000000000
-CT=47A9E40483EC1925B635E47E964E8E93
-
-I=55
-PT=00000000000002000000000000000000
-CT=9C0EBD822C49FB3D853DF5B315A87BA0
-
-I=56
-PT=00000000000001000000000000000000
-CT=C18D813FDB45A594C6DC24E5A1F6CE32
-
-I=57
-PT=00000000000000800000000000000000
-CT=7E5467FF245ECF80CB55C2D8E91F0711
-
-I=58
-PT=00000000000000400000000000000000
-CT=394D4365B77954FDEA4145FCF7A7A041
-
-I=59
-PT=00000000000000200000000000000000
-CT=B1D8311A492ED11F11E57B29221610C4
-
-I=60
-PT=00000000000000100000000000000000
-CT=E5FBB947A63AEA90163AF04AD6951EF8
-
-I=61
-PT=00000000000000080000000000000000
-CT=CA0627DDF580F0E7D59562825C9D0492
-
-I=62
-PT=00000000000000040000000000000000
-CT=EF98FFD1AED295AAE1860F0274C8F555
-
-I=63
-PT=00000000000000020000000000000000
-CT=8C698E5CFFF08FACE10C2DC5FF1E2A81
-
-I=64
-PT=00000000000000010000000000000000
-CT=35A7767E02032C35B5CE1A6F49C57C28
-
-I=65
-PT=00000000000000008000000000000000
-CT=AB36F8734E76EBA306CF00D6763D90B0
-
-I=66
-PT=00000000000000004000000000000000
-CT=E854EB66D4EC66889B5E6CD4F44A5806
-
-I=67
-PT=00000000000000002000000000000000
-CT=15B66DF1455ACD640B8716BCF5DB2D69
-
-I=68
-PT=00000000000000001000000000000000
-CT=4C57AB5333E5C2D4B7E30A007E449F48
-
-I=69
-PT=00000000000000000800000000000000
-CT=BA3E7FF28EB38EA09D8DB1440A9A3552
-
-I=70
-PT=00000000000000000400000000000000
-CT=64E60227AFD80C40C70186CC94804C1A
-
-I=71
-PT=00000000000000000200000000000000
-CT=CEB4423C20B4C91C2551F6FC227C9514
-
-I=72
-PT=00000000000000000100000000000000
-CT=F736894B843EF32DA28576DE500D448C
-
-I=73
-PT=00000000000000000080000000000000
-CT=58FDA98B678D15053D4B6C060368108C
-
-I=74
-PT=00000000000000000040000000000000
-CT=E28CAE384E578F47657755EBCD97996C
-
-I=75
-PT=00000000000000000020000000000000
-CT=0A64617BD4B5B166668240D105B7B6A2
-
-I=76
-PT=00000000000000000010000000000000
-CT=4BD090C7E3D365B5EA80F19B4798881E
-
-I=77
-PT=00000000000000000008000000000000
-CT=BC7B6CB9BFF4F72973BB2CD20A512C06
-
-I=78
-PT=00000000000000000004000000000000
-CT=4C7ADDC5C867594E9EE75F0AA6AB9C23
-
-I=79
-PT=00000000000000000002000000000000
-CT=1FBD05C71A36691AC6566A5298101D53
-
-I=80
-PT=00000000000000000001000000000000
-CT=42D7D6B1F499D412F8793972BD968DA2
-
-I=81
-PT=00000000000000000000800000000000
-CT=260EC86E2786FC68824576B934F32814
-
-I=82
-PT=00000000000000000000400000000000
-CT=576C26DFD7046F9357F34BEA7DFB26A0
-
-I=83
-PT=00000000000000000000200000000000
-CT=6D55E54BFB6F927174A02294C95E0F8F
-
-I=84
-PT=00000000000000000000100000000000
-CT=1A6CE91DD458229C7675A34950D10E23
-
-I=85
-PT=00000000000000000000080000000000
-CT=DAD0D5E7E000652825AA34D228EA8D8F
-
-I=86
-PT=00000000000000000000040000000000
-CT=E68013F48D75EAD2BBC0B0BDA5E690BF
-
-I=87
-PT=00000000000000000000020000000000
-CT=A07D92312FBAE37BFE8A834210AE4F9C
-
-I=88
-PT=00000000000000000000010000000000
-CT=6EEE5F8544CD7D456366EB448813989A
-
-I=89
-PT=00000000000000000000008000000000
-CT=F8E5C7FF4B79D7ABE8BFA2DD148820A8
-
-I=90
-PT=00000000000000000000004000000000
-CT=C6349D75C7472BBD66F95B3A07C79C91
-
-I=91
-PT=00000000000000000000002000000000
-CT=B85713C12D8658951CD1AD21C74D2CD2
-
-I=92
-PT=00000000000000000000001000000000
-CT=907AA00B9F7D47A97623FB55BA911F29
-
-I=93
-PT=00000000000000000000000800000000
-CT=DC3CD0ED23D11776FAB43A2A6A8F3557
-
-I=94
-PT=00000000000000000000000400000000
-CT=4BFE58A8FD69179C14765B09AB70B705
-
-I=95
-PT=00000000000000000000000200000000
-CT=A23996E0EA67EC280356E5F77130A551
-
-I=96
-PT=00000000000000000000000100000000
-CT=CDEADE859B3AACD273CCA85A3E2E45F2
-
-I=97
-PT=00000000000000000000000080000000
-CT=E0FC78489857D84DA03F40CE97147174
-
-I=98
-PT=00000000000000000000000040000000
-CT=7615EA6351F6BB12855E8579C6995D8E
-
-I=99
-PT=00000000000000000000000020000000
-CT=13E184344FE28C2E70ED0E4D0A8037F9
-
-I=100
-PT=00000000000000000000000010000000
-CT=A5FE395F568482B87BC3EB208C81C942
-
-I=101
-PT=00000000000000000000000008000000
-CT=B3103E11AF06C85565823F8CAA3159F6
-
-I=102
-PT=00000000000000000000000004000000
-CT=7EBC2234D271B89C519C396985300030
-
-I=103
-PT=00000000000000000000000002000000
-CT=0661D338F2E0C939BA1687820A768467
-
-I=104
-PT=00000000000000000000000001000000
-CT=EC2B42667C0195A90715499617884DA5
-
-I=105
-PT=00000000000000000000000000800000
-CT=AE077BA19D24E7188DDD3682FF196892
-
-I=106
-PT=00000000000000000000000000400000
-CT=98823C24B9C65A66073C7952DC2B4B5E
-
-I=107
-PT=00000000000000000000000000200000
-CT=6AB58432CBB3C2F503DA2D16796CC297
-
-I=108
-PT=00000000000000000000000000100000
-CT=EEB5EBB3A53E4196C2F22BC1A4DDF5E8
-
-I=109
-PT=00000000000000000000000000080000
-CT=33DC40AC5FDC126D38878416AF6C0FA6
-
-I=110
-PT=00000000000000000000000000040000
-CT=38EDDC08E18B4AD982CEA921D2765A9A
-
-I=111
-PT=00000000000000000000000000020000
-CT=7D6BEA038E9347C642E18631660A9558
-
-I=112
-PT=00000000000000000000000000010000
-CT=FDA57921A473B5EE3700AD5ADF035019
-
-I=113
-PT=00000000000000000000000000008000
-CT=699B4812E200337E9C1D2C397F0DFE4E
-
-I=114
-PT=00000000000000000000000000004000
-CT=7A1EADF68B0807145D6C414852DECFC8
-
-I=115
-PT=00000000000000000000000000002000
-CT=1645FFAA8AD76689C01DA8C40882781F
-
-I=116
-PT=00000000000000000000000000001000
-CT=BA0C053BE702FA62FC66D8FEB12FC97E
-
-I=117
-PT=00000000000000000000000000000800
-CT=841FD8AF69CF2C31F7D4D7B6959662B5
-
-I=118
-PT=00000000000000000000000000000400
-CT=F675D59BDB33231861268F539829DA0B
-
-I=119
-PT=00000000000000000000000000000200
-CT=A4967F45ABB4E8C7DC5E3806680F35E0
-
-I=120
-PT=00000000000000000000000000000100
-CT=4D7E08081CC82F92ABA7C58C99F8343F
-
-I=121
-PT=00000000000000000000000000000080
-CT=9AEFDB287C119B82353612B60ECCBFD8
-
-I=122
-PT=00000000000000000000000000000040
-CT=979BB6A1553A17592A86E78DF144A699
-
-I=123
-PT=00000000000000000000000000000020
-CT=A6FA8CAB06FD2E5BF3A858983C01757A
-
-I=124
-PT=00000000000000000000000000000010
-CT=BE8511254C31E25420B91D6FEF1710ED
-
-I=125
-PT=00000000000000000000000000000008
-CT=F589A908D18A21894971C0433581E1A5
-
-I=126
-PT=00000000000000000000000000000004
-CT=4237585130E7C9F715235EB1D8C94DE7
-
-I=127
-PT=00000000000000000000000000000002
-CT=DEFE3E0B5C54C94B4F2A0F5A46F6210D
-
-I=128
-PT=00000000000000000000000000000001
-CT=F5574ACC3148DFCB9015200631024DF9
-
-==========
-
-KEYSIZE=256
-
-KEY=0000000000000000000000000000000000000000000000000000000000000000
-
-I=1
-PT=80000000000000000000000000000000
-CT=B0C6B88AEA518AB09E847248E91B1B9D
-
-I=2
-PT=40000000000000000000000000000000
-CT=B8D7684E35FA1DB15BDCEE7A48659858
-
-I=3
-PT=20000000000000000000000000000000
-CT=F0CAD59AF92FBB79F36951E697492750
-
-I=4
-PT=10000000000000000000000000000000
-CT=117100F6635389560DC4A2DA24EBA70F
-
-I=5
-PT=08000000000000000000000000000000
-CT=DBDD62355553019ED84C35886421E532
-
-I=6
-PT=04000000000000000000000000000000
-CT=9CB8D04FA506F19848F7B9110518BFC8
-
-I=7
-PT=02000000000000000000000000000000
-CT=E4308E253BC3444D293500701BA82C6A
-
-I=8
-PT=01000000000000000000000000000000
-CT=EA2FAE53F7F30C0170A20E95A068503E
-
-I=9
-PT=00800000000000000000000000000000
-CT=14B14839EA221880B2C64D1FE000B93D
-
-I=10
-PT=00400000000000000000000000000000
-CT=A5CFC075B342D5101AACC334E73058BB
-
-I=11
-PT=00200000000000000000000000000000
-CT=477EA56B2EBAD0F8AC5E1936866560FF
-
-I=12
-PT=00100000000000000000000000000000
-CT=107E8598418404196EC59F63E45B7F6D
-
-I=13
-PT=00080000000000000000000000000000
-CT=FF6A891E7C1C074A68FEC291928FDD8D
-
-I=14
-PT=00040000000000000000000000000000
-CT=F64C250A13F45D377ADB7545B2B157A9
-
-I=15
-PT=00020000000000000000000000000000
-CT=FAD0F252086F11C830C65B63197CBC38
-
-I=16
-PT=00010000000000000000000000000000
-CT=9DCB89B209441F02AD0D25C6AB826629
-
-I=17
-PT=00008000000000000000000000000000
-CT=E62E4ED4E4F34EDC563710D960E09D4C
-
-I=18
-PT=00004000000000000000000000000000
-CT=98A1B926BA06895C3F2E84CCBACBC356
-
-I=19
-PT=00002000000000000000000000000000
-CT=29BE0BE4DB7F4D196718AEA38F3B0BFD
-
-I=20
-PT=00001000000000000000000000000000
-CT=F670C4EBECBA0B43E71F6D752BFD4854
-
-I=21
-PT=00000800000000000000000000000000
-CT=7D7666B4484CDB7E3605468E093A787C
-
-I=22
-PT=00000400000000000000000000000000
-CT=562D06B181C091DA6C43642AE99460C6
-
-I=23
-PT=00000200000000000000000000000000
-CT=AB0EFB5975E6186B7D76BC9672453488
-
-I=24
-PT=00000100000000000000000000000000
-CT=10C0756538E7BFF88D19AE2B1F7B859A
-
-I=25
-PT=00000080000000000000000000000000
-CT=AF7FCD5248F8C72F1695AA05DD1CADE0
-
-I=26
-PT=00000040000000000000000000000000
-CT=9841E555655609A75D7BE20B8A90EF1E
-
-I=27
-PT=00000020000000000000000000000000
-CT=27F9546E6A1B7464780000561783569C
-
-I=28
-PT=00000010000000000000000000000000
-CT=8671D935D7A8354EECB7288803D42D7A
-
-I=29
-PT=00000008000000000000000000000000
-CT=0DA44F508DEBC6F044394624FCEB8EBE
-
-I=30
-PT=00000004000000000000000000000000
-CT=AB137369BE6D93FBB18006BDB236EC09
-
-I=31
-PT=00000002000000000000000000000000
-CT=EB90C4E597A7E1779FFA260886E26F75
-
-I=32
-PT=00000001000000000000000000000000
-CT=618CF3588D5C128EAF252616230E08F7
-
-I=33
-PT=00000000800000000000000000000000
-CT=98DC4DB49D197AB9152D12B9DE2D73CA
-
-I=34
-PT=00000000400000000000000000000000
-CT=5BDDE24B15702A35E1F140C57D206443
-
-I=35
-PT=00000000200000000000000000000000
-CT=CF755809882BED8BA2F9F1A4ED296A2B
-
-I=36
-PT=00000000100000000000000000000000
-CT=F1A8DBB999538AE89D16F92A7F4D1DF1
-
-I=37
-PT=00000000080000000000000000000000
-CT=775222FDDAAECB81CF675C4E0B98179E
-
-I=38
-PT=00000000040000000000000000000000
-CT=12A648CADCD153C760A965826683119A
-
-I=39
-PT=00000000020000000000000000000000
-CT=0503FB10AB241E7CF45D8CDEEE474335
-
-I=40
-PT=00000000010000000000000000000000
-CT=3D299C0070CBBD831B802690B8E7CA24
-
-I=41
-PT=00000000008000000000000000000000
-CT=33105BD4D11D66753DC34D128BEFE3F4
-
-I=42
-PT=00000000004000000000000000000000
-CT=5EFCE2B4B987C0F77D27B44836881682
-
-I=43
-PT=00000000002000000000000000000000
-CT=7835449454128035D7F0EA99E327577B
-
-I=44
-PT=00000000001000000000000000000000
-CT=27BEDDA0601BE35122FB1D272D73AB3E
-
-I=45
-PT=00000000000800000000000000000000
-CT=54C3F99FF48E318CC515EDE75800C4B3
-
-I=46
-PT=00000000000400000000000000000000
-CT=C627C329F8E48299F6FDB23B9DBEA0BB
-
-I=47
-PT=00000000000200000000000000000000
-CT=1B6578F9E23BD8C1845A02431C5F9AA3
-
-I=48
-PT=00000000000100000000000000000000
-CT=6DB2FB8C0B9344D0547C0FF1292020C6
-
-I=49
-PT=00000000000080000000000000000000
-CT=4FAD9B2C37C131493FBEF53581FA4F83
-
-I=50
-PT=00000000000040000000000000000000
-CT=47502A01E93D2C87BD5584F6AFD3D99D
-
-I=51
-PT=00000000000020000000000000000000
-CT=056E1C6F651BFE50271B3B7A18E76D84
-
-I=52
-PT=00000000000010000000000000000000
-CT=5632BAF6627B3D96AD4E06FA6A561F55
-
-I=53
-PT=00000000000008000000000000000000
-CT=E29807CAACDFA2D41A7D9E91FA7FD8EB
-
-I=54
-PT=00000000000004000000000000000000
-CT=81DD44BB5D1822DEE605F9E6FF01D7B3
-
-I=55
-PT=00000000000002000000000000000000
-CT=5C3649925E47D7FF96482A8FBD9666FD
-
-I=56
-PT=00000000000001000000000000000000
-CT=695415A836E66E737887845EC08A1ADB
-
-I=57
-PT=00000000000000800000000000000000
-CT=F5416BCE292D9E2CEA5D1CC70BBAEED1
-
-I=58
-PT=00000000000000400000000000000000
-CT=7AEC4F1388FC29C47F7FED74ADDE8485
-
-I=59
-PT=00000000000000200000000000000000
-CT=82A9F1A6CE08BC4876E649D8A8EA7EB6
-
-I=60
-PT=00000000000000100000000000000000
-CT=B6296C88ADF1A792908B065EEB04BFC2
-
-I=61
-PT=00000000000000080000000000000000
-CT=E766A39AECCA40BDBFBE6FF3FA292913
-
-I=62
-PT=00000000000000040000000000000000
-CT=C6D081454EA00D83C23B5A62C84359E1
-
-I=63
-PT=00000000000000020000000000000000
-CT=85D259A79CCA80484504D1603F7A8F53
-
-I=64
-PT=00000000000000010000000000000000
-CT=D8291FA1C6DC250078824B2D0A20883F
-
-I=65
-PT=00000000000000008000000000000000
-CT=95387CB74C48FFBD1F8D64A6CC45E074
-
-I=66
-PT=00000000000000004000000000000000
-CT=A17F975F538F56CDF629B516011DE837
-
-I=67
-PT=00000000000000002000000000000000
-CT=B50B615A1654C6E1CB6AB33716C097FE
-
-I=68
-PT=00000000000000001000000000000000
-CT=7BBB2CBB874DF6C8B821DA7FB0F9011B
-
-I=69
-PT=00000000000000000800000000000000
-CT=E9EFE074D096A275E47CD2E6206DF6A1
-
-I=70
-PT=00000000000000000400000000000000
-CT=88F2F8D5A836406AE8BBB98C65BBDA55
-
-I=71
-PT=00000000000000000200000000000000
-CT=F64620D8D87585A3EF038B9AD58F5EA0
-
-I=72
-PT=00000000000000000100000000000000
-CT=694438EC141C8ED5F2F898B4554A298F
-
-I=73
-PT=00000000000000000080000000000000
-CT=3E6226EC7726A1EE5F5FA9B18CCE8C44
-
-I=74
-PT=00000000000000000040000000000000
-CT=8AB6949E79911647800B9E87362AB97A
-
-I=75
-PT=00000000000000000020000000000000
-CT=093C5CF24EDAF7F9F1C8A80DE4FF50A9
-
-I=76
-PT=00000000000000000010000000000000
-CT=28A36E50061F19E240351ED0E378CBF4
-
-I=77
-PT=00000000000000000008000000000000
-CT=B93BB36CB88BF26EA79198652AA51D3C
-
-I=78
-PT=00000000000000000004000000000000
-CT=DE4948083D044FAC9BCA6DA8CD67B8A6
-
-I=79
-PT=00000000000000000002000000000000
-CT=6E778B5BDA6CA118117E47470D080D3C
-
-I=80
-PT=00000000000000000001000000000000
-CT=0A9107324DA32B4281D032A3487EF875
-
-I=81
-PT=00000000000000000000800000000000
-CT=18ED5635312D71ABD123CCE779D4D68A
-
-I=82
-PT=00000000000000000000400000000000
-CT=2E3C63F95C4BC1F944BAB06DEDC9AA8E
-
-I=83
-PT=00000000000000000000200000000000
-CT=ACCC869EF07004C8C3C709083BE7BA2F
-
-I=84
-PT=00000000000000000000100000000000
-CT=DF60B34FB1A59147CC1FB049C1578206
-
-I=85
-PT=00000000000000000000080000000000
-CT=4228DC636C08E41021054AA0E1E2227A
-
-I=86
-PT=00000000000000000000040000000000
-CT=7CE27F66EFD735FFD6B3E1738C50495B
-
-I=87
-PT=00000000000000000000020000000000
-CT=F8E74B33A9CDE351DA0BBC06D69093D7
-
-I=88
-PT=00000000000000000000010000000000
-CT=AE0D22A5B37B8DC5D81CC641EED334D0
-
-I=89
-PT=00000000000000000000008000000000
-CT=C181C6CA5E163743458B9167A0B6A16A
-
-I=90
-PT=00000000000000000000004000000000
-CT=5171F4F6095E4B276CFBA1F07223FBE6
-
-I=91
-PT=00000000000000000000002000000000
-CT=2732F4D3A8C9D1D8D493840D6E0B864F
-
-I=92
-PT=00000000000000000000001000000000
-CT=3EF04E0059A061D973532CA5C1DFBE7B
-
-I=93
-PT=00000000000000000000000800000000
-CT=6D9A8F23579E4978EBAA87B5ADEB77E5
-
-I=94
-PT=00000000000000000000000400000000
-CT=BBD08873CC44BA4253C0C41FEEB7F124
-
-I=95
-PT=00000000000000000000000200000000
-CT=72E4B2437CBD283F3809CE686F6A591E
-
-I=96
-PT=00000000000000000000000100000000
-CT=6E5580514B92512B1BF4B1B987B9AA1B
-
-I=97
-PT=00000000000000000000000080000000
-CT=5EF5D0C5BCBDCB604D3A083B68CE0FA3
-
-I=98
-PT=00000000000000000000000040000000
-CT=9D991FDD723AD2182777A15CA0E0F665
-
-I=99
-PT=00000000000000000000000020000000
-CT=24440626EFC8F86BEA7DE78085AB8A22
-
-I=100
-PT=00000000000000000000000010000000
-CT=17C3630D62D13C1E826C0FCCBD74A864
-
-I=101
-PT=00000000000000000000000008000000
-CT=4CF5AB86A56AB134A7FE46CCE3F9FCE9
-
-I=102
-PT=00000000000000000000000004000000
-CT=3E6B9C0388F6D9B8F458F30221907607
-
-I=103
-PT=00000000000000000000000002000000
-CT=AD9C926B8A5CD98EEE88200617E59958
-
-I=104
-PT=00000000000000000000000001000000
-CT=AFF8AED5E075E02AF720CA4BF0028B3B
-
-I=105
-PT=00000000000000000000000000800000
-CT=D90EAFF909202BB209BB3BB8C7F9A954
-
-I=106
-PT=00000000000000000000000000400000
-CT=2C709B00E6A22F00F64A7D8EE341853F
-
-I=107
-PT=00000000000000000000000000200000
-CT=CCEC598F0D9F0BF201B2F487136D54A4
-
-I=108
-PT=00000000000000000000000000100000
-CT=73B2883A0A166AAE1BF14E60A5195FA3
-
-I=109
-PT=00000000000000000000000000080000
-CT=E676867BD9AD5EF915143388496779D7
-
-I=110
-PT=00000000000000000000000000040000
-CT=CDCB73D1BFCFD4BE7F1DAA9B1C6A4055
-
-I=111
-PT=00000000000000000000000000020000
-CT=02A3A5C89DAA24CD2C517F7A73286A89
-
-I=112
-PT=00000000000000000000000000010000
-CT=C0FA2AC9E92EE58C2DD12D6D43AB7035
-
-I=113
-PT=00000000000000000000000000008000
-CT=EDC2CB1F7291353BDBF2385519E6AE16
-
-I=114
-PT=00000000000000000000000000004000
-CT=B4B62D16D197A98CD3B978812B9D9884
-
-I=115
-PT=00000000000000000000000000002000
-CT=5CDFC95A529A905101CEA26BC1B891ED
-
-I=116
-PT=00000000000000000000000000001000
-CT=CC7150CD3650B98363296C7C4ED368D1
-
-I=117
-PT=00000000000000000000000000000800
-CT=CC57706B0C6526B8E25A5DBD32EACBDB
-
-I=118
-PT=00000000000000000000000000000400
-CT=30D30456AD98B182D64C649648F6AEC9
-
-I=119
-PT=00000000000000000000000000000200
-CT=D7E9DA7F631938EB649A08AF82FBD75F
-
-I=120
-PT=00000000000000000000000000000100
-CT=B8DA2AF6600B07895B5D0FFAF4991469
-
-I=121
-PT=00000000000000000000000000000080
-CT=0F6F64F930BA6C178943322B98114599
-
-I=122
-PT=00000000000000000000000000000040
-CT=8B1F247802E47C91BEE2AA34ECFD7A01
-
-I=123
-PT=00000000000000000000000000000020
-CT=7A6985778D3A66E97F23E01F0D0E45E7
-
-I=124
-PT=00000000000000000000000000000010
-CT=BA664AC39855518DFDEE10D1B3111FAE
-
-I=125
-PT=00000000000000000000000000000008
-CT=7C92854D801A1648F65CA81813DDBF83
-
-I=126
-PT=00000000000000000000000000000004
-CT=6A3F25AAB7E92D9CF378E5D9C040F26B
-
-I=127
-PT=00000000000000000000000000000002
-CT=3D4B2CDE666761BA5DFB305178E667FB
-
-I=128
-PT=00000000000000000000000000000001
-CT=9CDB269B5D293BC5DB9C55B057D9B591
-
-==========
+No Camellia support in wolfSSL EVP layer
diff --git a/src/lib/crypto/crypto_tests/camellia-test.c b/src/lib/crypto/crypto_tests/camellia-test.c
index 12aeed17af..712b65f1ab 100644
--- a/src/lib/crypto/crypto_tests/camellia-test.c
+++ b/src/lib/crypto/crypto_tests/camellia-test.c
@@ -133,6 +133,10 @@ int main (int argc, char *argv[])
 		argv[0], argv[0]);
 	return 1;
     }
+#ifdef HAVE_LIBWOLFSSL
+    printf("No Camellia support in wolfSSL EVP layer\n");
+    return 0;
+#endif
     init();
     if (argc == 2)
 	vk_test();
diff --git a/src/lib/crypto/crypto_tests/t_cksums.c b/src/lib/crypto/crypto_tests/t_cksums.c
index 4b5406e67c..8103c192dc 100644
--- a/src/lib/crypto/crypto_tests/t_cksums.c
+++ b/src/lib/crypto/crypto_tests/t_cksums.c
@@ -108,6 +108,7 @@ struct test {
         { KV5M_DATA, 16,
           "\xEB\x38\xCC\x97\xE2\x23\x0F\x59\xDA\x41\x17\xDC\x58\x59\xD7\xEC" }
     },
+#ifndef HAVE_LIBWOLFSSL
     {
         { KV5M_DATA, 11, "abcdefghijk" },
         CKSUMTYPE_CMAC_CAMELLIA128, ENCTYPE_CAMELLIA128_CTS_CMAC, 7,
@@ -142,6 +143,7 @@ struct test {
         { KV5M_DATA, 16,
           "\x3F\xA0\xB4\x23\x55\xE5\x2B\x18\x91\x87\x29\x4A\xA2\x52\xAB\x64" }
     },
+#endif
     {
         { KV5M_DATA, 21,
           "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
diff --git a/src/lib/crypto/crypto_tests/t_cmac.c b/src/lib/crypto/crypto_tests/t_cmac.c
index 565c35da7e..1a8deb91a4 100644
--- a/src/lib/crypto/crypto_tests/t_cmac.c
+++ b/src/lib/crypto/crypto_tests/t_cmac.c
@@ -99,6 +99,7 @@ check_result(const char *name, const unsigned char *result,
 int
 main(int argc, char **argv)
 {
+#ifndef HAVE_LIBWOLFSSL
     krb5_error_code ret;
     krb5_context context = NULL;
     krb5_keyblock keyblock;
@@ -144,4 +145,9 @@ main(int argc, char **argv)
     printf("All CMAC tests passed.\n");
     krb5_k_free_key(context, key);
     return 0;
+#else
+    printf("All CMAC tests skipped. wolfSSL does not have Camellia support "
+            "in the EVP layer.\n");
+    return 0;
+#endif
 }
diff --git a/src/lib/crypto/crypto_tests/t_decrypt.c b/src/lib/crypto/crypto_tests/t_decrypt.c
index 1dbc4dd1b6..f85219138b 100644
--- a/src/lib/crypto/crypto_tests/t_decrypt.c
+++ b/src/lib/crypto/crypto_tests/t_decrypt.c
@@ -445,6 +445,7 @@ struct test {
           "\xB7\x34\xD4\xD4\x98\xB6\x71\x4F\x1C\x1D" }
     },
 
+#ifndef HAVE_LIBWOLFSSL
     {
         ENCTYPE_CAMELLIA128_CTS_CMAC,
         { KV5M_DATA, 0, "", }, 0,
@@ -551,6 +552,7 @@ struct test {
           "\xF3\x4A\xD1\x25\x5A\x34\x49\x99\xAD\x37\x14\x68\x87\xA6\xC6\x84"
           "\x57\x31\xAC\x7F\x46\x37\x6A\x05\x04\xCD\x06\x57\x14\x74" }
     },
+#endif
 
     {
         ENCTYPE_AES128_CTS_HMAC_SHA256_128,
diff --git a/src/lib/crypto/crypto_tests/t_derive.c b/src/lib/crypto/crypto_tests/t_derive.c
index 381ae4393d..dffea4b6a7 100644
--- a/src/lib/crypto/crypto_tests/t_derive.c
+++ b/src/lib/crypto/crypto_tests/t_derive.c
@@ -137,6 +137,7 @@ struct test {
           "\xD7\xBB\xA9\x07\x76\xD8\x12\x6D\x91\xF3\x4F\x31\x01\xAE\xA8\xBA" }
     },
 
+#ifndef HAVE_LIBWOLFSSL
     /* Kc, Ke, Ki for a Camellia-128 key */
     {
         ENCTYPE_CAMELLIA128_CTS_CMAC,
@@ -200,6 +201,7 @@ struct test {
           "\xFA\x62\x4F\xA0\xE5\x23\x99\x3F\xA3\x88\xAE\xFD\xC6\x7E\x67\xEB"
           "\xCD\x8C\x08\xE8\xA0\x24\x6B\x1D\x73\xB0\xD1\xDD\x9F\xC5\x82\xB0" }
     },
+#endif
 
     /* Kc, Ke, Ki for an aes128-sha2 key. */
     {
diff --git a/src/lib/crypto/crypto_tests/t_encrypt.c b/src/lib/crypto/crypto_tests/t_encrypt.c
index 4afbddedbc..68215bc068 100644
--- a/src/lib/crypto/crypto_tests/t_encrypt.c
+++ b/src/lib/crypto/crypto_tests/t_encrypt.c
@@ -45,8 +45,11 @@ krb5_enctype interesting_enctypes[] = {
     ENCTYPE_ARCFOUR_HMAC_EXP,
     ENCTYPE_AES256_CTS_HMAC_SHA1_96,
     ENCTYPE_AES128_CTS_HMAC_SHA1_96,
+#ifndef HAVE_LIBWOLFSSL
+    /* No Camellia support in EVP wolfSSL layer */
     ENCTYPE_CAMELLIA128_CTS_CMAC,
     ENCTYPE_CAMELLIA256_CTS_CMAC,
+#endif
     ENCTYPE_AES128_CTS_HMAC_SHA256_128,
     ENCTYPE_AES256_CTS_HMAC_SHA384_192,
     0
diff --git a/src/lib/crypto/crypto_tests/t_short.c b/src/lib/crypto/crypto_tests/t_short.c
index 40fa2821f6..0227110357 100644
--- a/src/lib/crypto/crypto_tests/t_short.c
+++ b/src/lib/crypto/crypto_tests/t_short.c
@@ -42,8 +42,10 @@ krb5_enctype interesting_enctypes[] = {
     ENCTYPE_ARCFOUR_HMAC_EXP,
     ENCTYPE_AES256_CTS_HMAC_SHA1_96,
     ENCTYPE_AES128_CTS_HMAC_SHA1_96,
+#ifndef HAVE_LIBWOLFSSL
     ENCTYPE_CAMELLIA128_CTS_CMAC,
     ENCTYPE_CAMELLIA256_CTS_CMAC,
+#endif
     ENCTYPE_AES128_CTS_HMAC_SHA256_128,
     ENCTYPE_AES256_CTS_HMAC_SHA384_192,
     0
diff --git a/src/lib/crypto/crypto_tests/t_str2key.c b/src/lib/crypto/crypto_tests/t_str2key.c
index 7a78138744..76f0626432 100644
--- a/src/lib/crypto/crypto_tests/t_str2key.c
+++ b/src/lib/crypto/crypto_tests/t_str2key.c
@@ -523,6 +523,7 @@ struct test {
         FALSE
     },
 
+#ifndef HAVE_LIBWOLFSSL
     /* The same inputs applied to Camellia enctypes. */
     {
         ENCTYPE_CAMELLIA128_CTS_CMAC,
@@ -671,6 +672,7 @@ struct test {
         0,
         TRUE
     },
+#endif
     /* Check for KRB5_ERR_BAD_S2K_PARAMS return when weak iteration counts are
      * forbidden. */
     {
diff --git a/src/lib/crypto/openssl/Makefile.in b/src/lib/crypto/openssl/Makefile.in
index aa434b1685..246e0ed5b9 100644
--- a/src/lib/crypto/openssl/Makefile.in
+++ b/src/lib/crypto/openssl/Makefile.in
@@ -1,6 +1,10 @@
 mydir=lib$(S)crypto$(S)openssl
 BUILDTOP=$(REL)..$(S)..$(S)..
+ifeq ($(CRYPTO_IMPL_WOLFSSL),no)
 SUBDIRS=camellia des aes md4 md5  sha1 sha2 enc_provider hash_provider
+else
+SUBDIRS=des aes md4 md5  sha1 sha2 enc_provider hash_provider
+endif
 LOCALINCLUDES = -I$(srcdir)/../krb -I$(srcdir)
 
 STLIBOBJS=\
diff --git a/src/lib/crypto/openssl/enc_provider/camellia.c b/src/lib/crypto/openssl/enc_provider/camellia.c
index 2da6913292..1a762ccfc5 100644
--- a/src/lib/crypto/openssl/enc_provider/camellia.c
+++ b/src/lib/crypto/openssl/enc_provider/camellia.c
@@ -49,6 +49,9 @@ cts_decr(krb5_key key, const krb5_data *ivec, krb5_crypto_iov *data,
 static void
 xorblock(unsigned char *out, const unsigned char *in)
 {
+    (void)out;
+    (void)in;
+#ifndef HAVE_LIBWOLFSSL
     int z;
     for (z = 0; z < CAMELLIA_BLOCK_SIZE / 4; z++) {
         unsigned char *outptr = &out[z * 4];
@@ -69,16 +72,19 @@ xorblock(unsigned char *out, const unsigned char *in)
          */
         store_32_n(load_32_n(outptr) ^ load_32_n(inptr), outptr);
     }
+#endif
 }
 
 static const EVP_CIPHER *
 map_mode(unsigned int len)
 {
+#ifndef HAVE_LIBWOLFSSL
     if (len==16)
         return EVP_camellia_128_cbc();
     if (len==32)
         return EVP_camellia_256_cbc();
     else
+#endif
         return NULL;
 }
 
@@ -154,6 +160,7 @@ static krb5_error_code
 cts_encr(krb5_key key, const krb5_data *ivec, krb5_crypto_iov *data,
          size_t num_data, size_t dlen)
 {
+#ifndef HAVE_LIBWOLFSSL
     int                    ret = 0;
     size_t                 size = 0;
     unsigned char         *oblock = NULL, *dbuf = NULL;
@@ -200,12 +207,16 @@ cts_encr(krb5_key key, const krb5_data *ivec, krb5_crypto_iov *data,
     OPENSSL_free(dbuf);
 
     return ret;
+#else
+    return KRB5_CRYPTO_INTERNAL;
+#endif
 }
 
 static krb5_error_code
 cts_decr(krb5_key key, const krb5_data *ivec, krb5_crypto_iov *data,
          size_t num_data, size_t dlen)
 {
+#ifndef HAVE_LIBWOLFSSL
     int                    ret = 0;
     size_t                 size = 0;
     unsigned char         *oblock = NULL;
@@ -253,6 +264,9 @@ cts_decr(krb5_key key, const krb5_data *ivec, krb5_crypto_iov *data,
     OPENSSL_free(dbuf);
 
     return ret;
+#else
+    return KRB5_CRYPTO_INTERNAL;
+#endif
 }
 
 static krb5_error_code
@@ -300,6 +314,7 @@ krb5int_camellia_cbc_mac(krb5_key key, const krb5_crypto_iov *data,
                          size_t num_data, const krb5_data *iv,
                          krb5_data *output)
 {
+#ifndef HAVE_LIBWOLFSSL
     CAMELLIA_KEY enck;
     unsigned char blockY[CAMELLIA_BLOCK_SIZE], blockB[CAMELLIA_BLOCK_SIZE];
     struct iov_cursor cursor;
@@ -325,6 +340,9 @@ krb5int_camellia_cbc_mac(krb5_key key, const krb5_crypto_iov *data,
     memcpy(output->data, blockY, CAMELLIA_BLOCK_SIZE);
 
     return 0;
+#else
+    return KRB5_CRYPTO_INTERNAL;
+#endif
 }
 
 static krb5_error_code
diff --git a/src/lib/krb5/os/sendto_kdc.c b/src/lib/krb5/os/sendto_kdc.c
index e8bc0ad6e2..dbc4c5ccb9 100644
--- a/src/lib/krb5/os/sendto_kdc.c
+++ b/src/lib/krb5/os/sendto_kdc.c
@@ -1256,9 +1256,9 @@ service_https_write(krb5_context context, const krb5_data *realm,
         TRACE_SENDTO_KDC_HTTPS_SEND(context, &conn->addr);
         cm_read(selstate, conn->fd);
         conn->state = READING;
-    } else if (st == WANT_READ) {
+    } else if (st == K5_WANT_READ) {
         cm_read(selstate, conn->fd);
-    } else if (st == WANT_WRITE) {
+    } else if (st == K5_WANT_WRITE) {
         cm_write(selstate, conn->fd);
     } else if (st == ERROR_TLS) {
         TRACE_SENDTO_KDC_HTTPS_ERROR_SEND(context, &conn->addr);
@@ -1307,9 +1307,9 @@ https_read_bytes(krb5_context context, struct conn_state *conn,
     if (st == DONE)
         return TRUE;
 
-    if (st == WANT_READ) {
+    if (st == K5_WANT_READ) {
         cm_read(selstate, conn->fd);
-    } else if (st == WANT_WRITE) {
+    } else if (st == K5_WANT_WRITE) {
         cm_write(selstate, conn->fd);
     } else if (st == ERROR_TLS) {
         TRACE_SENDTO_KDC_HTTPS_ERROR_RECV(context, &conn->addr);
diff --git a/src/m4/pkg.m4 b/src/m4/pkg.m4
new file mode 100644
index 0000000000..1e4694cb34
--- /dev/null
+++ b/src/m4/pkg.m4
@@ -0,0 +1,344 @@
+# pkg.m4 - Macros to locate and utilise pkg-config.   -*- Autoconf -*-
+# serial 11 (pkg-config-0.29.1)
+
+dnl Copyright © 2004 Scott James Remnant <scott@netsplit.com>.
+dnl Copyright © 2012-2015 Dan Nicholson <dbn.lists@gmail.com>
+dnl
+dnl This program is free software; you can redistribute it and/or modify
+dnl it under the terms of the GNU General Public License as published by
+dnl the Free Software Foundation; either version 2 of the License, or
+dnl (at your option) any later version.
+dnl
+dnl This program is distributed in the hope that it will be useful, but
+dnl WITHOUT ANY WARRANTY; without even the implied warranty of
+dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+dnl General Public License for more details.
+dnl
+dnl You should have received a copy of the GNU General Public License
+dnl along with this program; if not, write to the Free Software
+dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+dnl 02111-1307, USA.
+dnl
+dnl As a special exception to the GNU General Public License, if you
+dnl distribute this file as part of a program that contains a
+dnl configuration script generated by Autoconf, you may include it under
+dnl the same distribution terms that you use for the rest of that
+dnl program.
+
+dnl PKG_PREREQ(MIN-VERSION)
+dnl -----------------------
+dnl Since: 0.29
+dnl
+dnl Verify that the version of the pkg-config macros are at least
+dnl MIN-VERSION. Unlike PKG_PROG_PKG_CONFIG, which checks the user's
+dnl installed version of pkg-config, this checks the developer's version
+dnl of pkg.m4 when generating configure.
+dnl
+dnl To ensure that this macro is defined, also add:
+dnl m4_ifndef([PKG_PREREQ],
+dnl     [m4_fatal([must install pkg-config 0.29 or later before running autoconf/autogen])])
+dnl
+dnl See the "Since" comment for each macro you use to see what version
+dnl of the macros you require.
+m4_defun([PKG_PREREQ],
+[m4_define([PKG_MACROS_VERSION], [0.29.1])
+m4_if(m4_version_compare(PKG_MACROS_VERSION, [$1]), -1,
+    [m4_fatal([pkg.m4 version $1 or higher is required but ]PKG_MACROS_VERSION[ found])])
+])dnl PKG_PREREQ
+
+dnl PKG_PROG_PKG_CONFIG([MIN-VERSION])
+dnl ----------------------------------
+dnl Since: 0.16
+dnl
+dnl Search for the pkg-config tool and set the PKG_CONFIG variable to
+dnl first found in the path. Checks that the version of pkg-config found
+dnl is at least MIN-VERSION. If MIN-VERSION is not specified, 0.9.0 is
+dnl used since that's the first version where most current features of
+dnl pkg-config existed.
+AC_DEFUN([PKG_PROG_PKG_CONFIG],
+[m4_pattern_forbid([^_?PKG_[A-Z_]+$])
+m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
+m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
+AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
+AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
+AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])
+
+if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
+	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
+fi
+if test -n "$PKG_CONFIG"; then
+	_pkg_min_version=m4_default([$1], [0.9.0])
+	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
+	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
+		AC_MSG_RESULT([yes])
+	else
+		AC_MSG_RESULT([no])
+		PKG_CONFIG=""
+	fi
+fi[]dnl
+])dnl PKG_PROG_PKG_CONFIG
+
+dnl PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+dnl -------------------------------------------------------------------
+dnl Since: 0.18
+dnl
+dnl Check to see whether a particular set of modules exists. Similar to
+dnl PKG_CHECK_MODULES(), but does not set variables or print errors.
+dnl
+dnl Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])
+dnl only at the first occurence in configure.ac, so if the first place
+dnl it's called might be skipped (such as if it is within an "if", you
+dnl have to call PKG_CHECK_EXISTS manually
+AC_DEFUN([PKG_CHECK_EXISTS],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+if test -n "$PKG_CONFIG" && \
+    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
+  m4_default([$2], [:])
+m4_ifvaln([$3], [else
+  $3])dnl
+fi])
+
+dnl _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])
+dnl ---------------------------------------------
+dnl Internal wrapper calling pkg-config via PKG_CONFIG and setting
+dnl pkg_failed based on the result.
+m4_define([_PKG_CONFIG],
+[if test -n "$$1"; then
+    pkg_cv_[]$1="$$1"
+ elif test -n "$PKG_CONFIG"; then
+    PKG_CHECK_EXISTS([$3],
+                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 "$3" 2>/dev/null`
+		      test "x$?" != "x0" && pkg_failed=yes ],
+		     [pkg_failed=yes])
+ else
+    pkg_failed=untried
+fi[]dnl
+])dnl _PKG_CONFIG
+
+dnl _PKG_SHORT_ERRORS_SUPPORTED
+dnl ---------------------------
+dnl Internal check to see if pkg-config supports short errors.
+AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])
+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
+        _pkg_short_errors_supported=yes
+else
+        _pkg_short_errors_supported=no
+fi[]dnl
+])dnl _PKG_SHORT_ERRORS_SUPPORTED
+
+
+dnl PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
+dnl   [ACTION-IF-NOT-FOUND])
+dnl --------------------------------------------------------------
+dnl Since: 0.4.0
+dnl
+dnl Note that if there is a possibility the first call to
+dnl PKG_CHECK_MODULES might not happen, you should be sure to include an
+dnl explicit call to PKG_PROG_PKG_CONFIG in your configure.ac
+AC_DEFUN([PKG_CHECK_MODULES],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
+AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl
+
+pkg_failed=no
+AC_MSG_CHECKING([for $1])
+
+_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
+_PKG_CONFIG([$1][_LIBS], [libs], [$2])
+
+m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
+and $1[]_LIBS to avoid the need to call pkg-config.
+See the pkg-config man page for more details.])
+
+if test $pkg_failed = yes; then
+   	AC_MSG_RESULT([no])
+        _PKG_SHORT_ERRORS_SUPPORTED
+        if test $_pkg_short_errors_supported = yes; then
+	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
+        else 
+	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
+        fi
+	# Put the nasty error message in config.log where it belongs
+	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD
+
+	m4_default([$4], [AC_MSG_ERROR(
+[Package requirements ($2) were not met:
+
+$$1_PKG_ERRORS
+
+Consider adjusting the PKG_CONFIG_PATH environment variable if you
+installed software in a non-standard prefix.
+
+_PKG_TEXT])[]dnl
+        ])
+elif test $pkg_failed = untried; then
+     	AC_MSG_RESULT([no])
+	m4_default([$4], [AC_MSG_FAILURE(
+[The pkg-config script could not be found or is too old.  Make sure it
+is in your PATH or set the PKG_CONFIG environment variable to the full
+path to pkg-config.
+
+_PKG_TEXT
+
+To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
+        ])
+else
+	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
+	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
+        AC_MSG_RESULT([yes])
+	$3
+fi[]dnl
+])dnl PKG_CHECK_MODULES
+
+
+dnl PKG_CHECK_MODULES_STATIC(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
+dnl   [ACTION-IF-NOT-FOUND])
+dnl ---------------------------------------------------------------------
+dnl Since: 0.29
+dnl
+dnl Checks for existence of MODULES and gathers its build flags with
+dnl static libraries enabled. Sets VARIABLE-PREFIX_CFLAGS from --cflags
+dnl and VARIABLE-PREFIX_LIBS from --libs.
+dnl
+dnl Note that if there is a possibility the first call to
+dnl PKG_CHECK_MODULES_STATIC might not happen, you should be sure to
+dnl include an explicit call to PKG_PROG_PKG_CONFIG in your
+dnl configure.ac.
+AC_DEFUN([PKG_CHECK_MODULES_STATIC],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+_save_PKG_CONFIG=$PKG_CONFIG
+PKG_CONFIG="$PKG_CONFIG --static"
+PKG_CHECK_MODULES($@)
+PKG_CONFIG=$_save_PKG_CONFIG[]dnl
+])dnl PKG_CHECK_MODULES_STATIC
+
+
+dnl PKG_INSTALLDIR([DIRECTORY])
+dnl -------------------------
+dnl Since: 0.27
+dnl
+dnl Substitutes the variable pkgconfigdir as the location where a module
+dnl should install pkg-config .pc files. By default the directory is
+dnl $libdir/pkgconfig, but the default can be changed by passing
+dnl DIRECTORY. The user can override through the --with-pkgconfigdir
+dnl parameter.
+AC_DEFUN([PKG_INSTALLDIR],
+[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
+m4_pushdef([pkg_description],
+    [pkg-config installation directory @<:@]pkg_default[@:>@])
+AC_ARG_WITH([pkgconfigdir],
+    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
+    [with_pkgconfigdir=]pkg_default)
+AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
+m4_popdef([pkg_default])
+m4_popdef([pkg_description])
+])dnl PKG_INSTALLDIR
+
+
+dnl PKG_NOARCH_INSTALLDIR([DIRECTORY])
+dnl --------------------------------
+dnl Since: 0.27
+dnl
+dnl Substitutes the variable noarch_pkgconfigdir as the location where a
+dnl module should install arch-independent pkg-config .pc files. By
+dnl default the directory is $datadir/pkgconfig, but the default can be
+dnl changed by passing DIRECTORY. The user can override through the
+dnl --with-noarch-pkgconfigdir parameter.
+AC_DEFUN([PKG_NOARCH_INSTALLDIR],
+[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
+m4_pushdef([pkg_description],
+    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
+AC_ARG_WITH([noarch-pkgconfigdir],
+    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
+    [with_noarch_pkgconfigdir=]pkg_default)
+AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
+m4_popdef([pkg_default])
+m4_popdef([pkg_description])
+])dnl PKG_NOARCH_INSTALLDIR
+
+
+dnl PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,
+dnl [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+dnl -------------------------------------------
+dnl Since: 0.28
+dnl
+dnl Retrieves the value of the pkg-config variable for the given module.
+AC_DEFUN([PKG_CHECK_VAR],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl
+
+_PKG_CONFIG([$1], [variable="][$3]["], [$2])
+AS_VAR_COPY([$1], [pkg_cv_][$1])
+
+AS_VAR_IF([$1], [""], [$5], [$4])dnl
+])dnl PKG_CHECK_VAR
+
+dnl PKG_WITH_MODULES(VARIABLE-PREFIX, MODULES,
+dnl   [ACTION-IF-FOUND],[ACTION-IF-NOT-FOUND],
+dnl   [DESCRIPTION], [DEFAULT])
+dnl ------------------------------------------
+dnl
+dnl Prepare a "--with-" configure option using the lowercase
+dnl [VARIABLE-PREFIX] name, merging the behaviour of AC_ARG_WITH and
+dnl PKG_CHECK_MODULES in a single macro.
+AC_DEFUN([PKG_WITH_MODULES],
+[
+m4_pushdef([with_arg], m4_tolower([$1]))
+
+m4_pushdef([description],
+           [m4_default([$5], [build with ]with_arg[ support])])
+
+m4_pushdef([def_arg], [m4_default([$6], [auto])])
+m4_pushdef([def_action_if_found], [AS_TR_SH([with_]with_arg)=yes])
+m4_pushdef([def_action_if_not_found], [AS_TR_SH([with_]with_arg)=no])
+
+m4_case(def_arg,
+            [yes],[m4_pushdef([with_without], [--without-]with_arg)],
+            [m4_pushdef([with_without],[--with-]with_arg)])
+
+AC_ARG_WITH(with_arg,
+     AS_HELP_STRING(with_without, description[ @<:@default=]def_arg[@:>@]),,
+    [AS_TR_SH([with_]with_arg)=def_arg])
+
+AS_CASE([$AS_TR_SH([with_]with_arg)],
+            [yes],[PKG_CHECK_MODULES([$1],[$2],$3,$4)],
+            [auto],[PKG_CHECK_MODULES([$1],[$2],
+                                        [m4_n([def_action_if_found]) $3],
+                                        [m4_n([def_action_if_not_found]) $4])])
+
+m4_popdef([with_arg])
+m4_popdef([description])
+m4_popdef([def_arg])
+
+])dnl PKG_WITH_MODULES
+
+dnl PKG_HAVE_WITH_MODULES(VARIABLE-PREFIX, MODULES,
+dnl   [DESCRIPTION], [DEFAULT])
+dnl -----------------------------------------------
+dnl
+dnl Convenience macro to trigger AM_CONDITIONAL after PKG_WITH_MODULES
+dnl check._[VARIABLE-PREFIX] is exported as make variable.
+AC_DEFUN([PKG_HAVE_WITH_MODULES],
+[
+PKG_WITH_MODULES([$1],[$2],,,[$3],[$4])
+
+AM_CONDITIONAL([HAVE_][$1],
+               [test "$AS_TR_SH([with_]m4_tolower([$1]))" = "yes"])
+])dnl PKG_HAVE_WITH_MODULES
+
+dnl PKG_HAVE_DEFINE_WITH_MODULES(VARIABLE-PREFIX, MODULES,
+dnl   [DESCRIPTION], [DEFAULT])
+dnl ------------------------------------------------------
+dnl
+dnl Convenience macro to run AM_CONDITIONAL and AC_DEFINE after
+dnl PKG_WITH_MODULES check. HAVE_[VARIABLE-PREFIX] is exported as make
+dnl and preprocessor variable.
+AC_DEFUN([PKG_HAVE_DEFINE_WITH_MODULES],
+[
+PKG_HAVE_WITH_MODULES([$1],[$2],[$3],[$4])
+
+AS_IF([test "$AS_TR_SH([with_]m4_tolower([$1]))" = "yes"],
+        [AC_DEFINE([HAVE_][$1], 1, [Enable ]m4_tolower([$1])[ support])])
+])dnl PKG_HAVE_DEFINE_WITH_MODULES
+
diff --git a/src/plugins/preauth/pkinit/Makefile.in b/src/plugins/preauth/pkinit/Makefile.in
index d8b9398180..45d67dd913 100644
--- a/src/plugins/preauth/pkinit/Makefile.in
+++ b/src/plugins/preauth/pkinit/Makefile.in
@@ -10,7 +10,12 @@ RELDIR=../plugins/preauth/pkinit
 SHLIB_EXPDEPS = \
 	$(TOPLIBD)/libk5crypto$(SHLIBEXT) \
 	$(TOPLIBD)/libkrb5$(SHLIBEXT)
+
+ifeq ($(CRYPTO_IMPL_WOLFSSL),no)
 SHLIB_EXPLIBS= -lkrb5 -lcom_err -lk5crypto -lcrypto $(DL_LIB) $(SUPPORT_LIB) $(LIBS)
+else
+SHLIB_EXPLIBS= -lkrb5 -lcom_err -lk5crypto -lwolfssl $(DL_LIB) $(SUPPORT_LIB) $(LIBS)
+endif
 
 STLIBOBJS= \
 	pkinit_accessor.o \
diff --git a/src/plugins/tls/k5tls/openssl.c b/src/plugins/tls/k5tls/openssl.c
index 822632c90e..a043875111 100644
--- a/src/plugins/tls/k5tls/openssl.c
+++ b/src/plugins/tls/k5tls/openssl.c
@@ -506,9 +506,9 @@ write_tls(krb5_context context, k5_tls_handle handle, const void *data,
 
     e = SSL_get_error(handle->ssl, nwritten);
     if (e == SSL_ERROR_WANT_READ)
-        return WANT_READ;
+        return K5_WANT_READ;
     else if (e == SSL_ERROR_WANT_WRITE)
-        return WANT_WRITE;
+        return K5_WANT_WRITE;
     flush_errors(context);
     return ERROR_TLS;
 }
@@ -534,9 +534,9 @@ read_tls(krb5_context context, k5_tls_handle handle, void *data,
 
     e = SSL_get_error(handle->ssl, nread);
     if (e == SSL_ERROR_WANT_READ)
-        return WANT_READ;
+        return K5_WANT_READ;
     else if (e == SSL_ERROR_WANT_WRITE)
-        return WANT_WRITE;
+        return K5_WANT_WRITE;
 
     if (e == SSL_ERROR_ZERO_RETURN || (e == SSL_ERROR_SYSCALL && nread == 0))
         return DONE;
diff --git a/src/tests/dejagnu/config/default.exp b/src/tests/dejagnu/config/default.exp
index 2d1686c56c..34a3dd5956 100644
--- a/src/tests/dejagnu/config/default.exp
+++ b/src/tests/dejagnu/config/default.exp
@@ -212,30 +212,6 @@ set passes {
 	{master_key_type=aes256-sha2}
 	{dummy=[verbose -log "aes256-sha2 enctype"]}
     }
-    {
-	camellia-only
-	mode=udp
-	des3_krbtgt=0
-	{supported_enctypes=camellia256-cts:normal}
-	{permitted_enctypes(kdc)=camellia256-cts}
-	{permitted_enctypes(slave)=camellia256-cts}
-	{permitted_enctypes(client)=camellia256-cts}
-	{permitted_enctypes(server)=camellia256-cts}
-	{default_tgs_enctypes(kdc)=camellia256-cts}
-	{default_tgs_enctypes(slave)=camellia256-cts}
-	{default_tgs_enctypes(client)=camellia256-cts}
-	{default_tgs_enctypes(server)=camellia256-cts}
-	{default_tkt_enctypes(kdc)=camellia256-cts}
-	{default_tkt_enctypes(slave)=camellia256-cts}
-	{default_tkt_enctypes(client)=camellia256-cts}
-	{default_tkt_enctypes(server)=camellia256-cts}
-	{allow_weak_crypto(kdc)=false}
-	{allow_weak_crypto(slave)=false}
-	{allow_weak_crypto(client)=false}
-	{allow_weak_crypto(server)=false}
-	{master_key_type=camellia256-cts}
-	{dummy=[verbose -log "Camellia-256 enctype"]}
-    }
     {
 	aes-des3
 	mode=udp
diff --git a/src/tests/gssapi/t_prf.c b/src/tests/gssapi/t_prf.c
index 2c8c85188a..c7eee8bec0 100644
--- a/src/tests/gssapi/t_prf.c
+++ b/src/tests/gssapi/t_prf.c
@@ -75,6 +75,7 @@ static struct {
       "F5B68B7823D8944F33F41541B4E4D38C9B2934F8D16334A796645B066152B4BE",
       "112F2B2D878590653CCC7DE278E9F0AA46FA5A380B62"
       "59F774CB7C134FCD37F61A50FD0D9F89BF8FE1A6B593" },
+#ifndef HAVE_LIBWOLFSSL
     { ENCTYPE_CAMELLIA128_CTS_CMAC,
       "866E0466A178279A32AC0BDA92B72AEB",
       "97FBB354BF341C3A160DCC86A7A910FDA824601DF677"
@@ -89,6 +90,7 @@ static struct {
       "A171AD582C1AFBBAD52ABD622EE6B6A14D19BF95C6914B2BA40FFD99A88EC660",
       "A47CBB6E104DCC77E4DB48A7A474B977F2FB6A7A1AB6"
       "52317D50508AE72B7BE2E4E4BA24164E029CBACF786B" },
+#endif
     { ENCTYPE_AES128_CTS_HMAC_SHA256_128,
       "089BCA48B105EA6EA77CA5D2F39DC5E7",
       "ED1736209B7C59C9F6A3AE8CCC8A7C97ADFDD11688AD"
-- 
2.25.1

