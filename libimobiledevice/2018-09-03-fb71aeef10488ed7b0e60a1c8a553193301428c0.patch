From 990fbf804c7daa2974bd1063366f674ff3957ab5 Mon Sep 17 00:00:00 2001
From: Hayden Roche <hayden@wolfssl.com>
Date: Mon, 23 Aug 2021 12:59:39 -0700
Subject: [PATCH] Support for wolfSSL

Compile wolfSSL with
```
./configure --enable-opensslall --enable-keygen --enable-certgen --enable-certreq --enable-oldtls --enable-tlsv10
make
make install
```

Compile libimobiledevice with
```
patch -p1 < <path/to/patch/file>
./autogen.sh --enable-wolfssl
make
make install
```
---
 common/Makefile.am    |  2 +-
 common/userpref.c     | 21 +++++++++++++++++++++
 configure.ac          | 37 +++++++++++++++++++++++++++++++++++--
 cython/Makefile.am    |  4 ++--
 src/Makefile.am       |  4 ++--
 tools/Makefile.am     |  4 ++--
 tools/idevicebackup.c |  3 +++
 7 files changed, 66 insertions(+), 9 deletions(-)

diff --git a/common/Makefile.am b/common/Makefile.am
index 054e2a1..e8f9120 100644
--- a/common/Makefile.am
+++ b/common/Makefile.am
@@ -1,6 +1,6 @@
 AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)
 
-AM_CFLAGS = $(GLOBAL_CFLAGS) $(libusbmuxd_CFLAGS) $(libplist_CFLAGS) $(libgnutls_CFLAGS) $(libtasn1_CFLAGS) $(openssl_CFLAGS) $(LFS_CFLAGS)
+AM_CFLAGS = $(GLOBAL_CFLAGS) $(libusbmuxd_CFLAGS) $(libplist_CFLAGS) $(libgnutls_CFLAGS) $(libtasn1_CFLAGS) $(openssl_CFLAGS) $(wolfssl_CFLAGS) $(LFS_CFLAGS)
 AM_LDFLAGS = $(libusbmuxd_LIBS) $(libplist_LIBS) ${libpthread_LIBS}
 
 noinst_LTLIBRARIES = libinternalcommon.la
diff --git a/common/userpref.c b/common/userpref.c
index be745cb..a67923b 100644
--- a/common/userpref.c
+++ b/common/userpref.c
@@ -347,6 +347,10 @@ static int X509_add_ext_helper(X509 *cert, int nid, char *value)
 	X509_EXTENSION *ex;
 	X509V3_CTX ctx;
 
+#ifdef HAVE_WOLFSSL
+	memset(&ctx, 0, sizeof(ctx));
+#endif
+
 	/* No configuration database */
 	X509V3_set_ctx_nodb(&ctx);
 
@@ -411,7 +415,14 @@ userpref_error_t pair_record_generate_keys_and_certs(plist_t pair_record, key_da
 	{
 		/* set serial number */
 		ASN1_INTEGER* sn = ASN1_INTEGER_new();
+#ifdef HAVE_WOLFSSL
+		/* wolfSSL doesn't permit using 0 for serial numbers, in accordance with
+		 * RFC 5280:
+		 * https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.2. */
+		ASN1_INTEGER_set(sn, 1);
+#else
 		ASN1_INTEGER_set(sn, 0);
+#endif
 		X509_set_serialNumber(root_cert, sn);
 		ASN1_INTEGER_free(sn);
 
@@ -441,7 +452,12 @@ userpref_error_t pair_record_generate_keys_and_certs(plist_t pair_record, key_da
 	{
 		/* set serial number */
 		ASN1_INTEGER* sn = ASN1_INTEGER_new();
+#ifdef HAVE_WOLFSSL
+		/* See note above on 0 serial numbers. */
+		ASN1_INTEGER_set(sn, 2);
+#else
 		ASN1_INTEGER_set(sn, 0);
+#endif
 		X509_set_serialNumber(host_cert, sn);
 		ASN1_INTEGER_free(sn);
 
@@ -528,7 +544,12 @@ userpref_error_t pair_record_generate_keys_and_certs(plist_t pair_record, key_da
 	if (pubkey && dev_cert) {
 		/* generate device certificate */
 		ASN1_INTEGER* sn = ASN1_INTEGER_new();
+#ifdef HAVE_WOLFSSL
+		/* See note above on 0 serial numbers. */
+		ASN1_INTEGER_set(sn, 3);
+#else
 		ASN1_INTEGER_set(sn, 0);
+#endif
 		X509_set_serialNumber(dev_cert, sn);
 		ASN1_INTEGER_free(sn);
 		X509_set_version(dev_cert, 2);
diff --git a/configure.ac b/configure.ac
index e41baa3..69bee8e 100644
--- a/configure.ac
+++ b/configure.ac
@@ -118,14 +118,25 @@ fi
 AM_CONDITIONAL([HAVE_CYTHON],[test "x$CYTHON_SUB" = "xcython"])
 AC_SUBST([CYTHON_SUB])
 
+AC_ARG_ENABLE([wolfssl],
+            [AS_HELP_STRING([--enable-wolfssl],
+            [Use wolfSSL crypto])],
+            [use_wolfssl=$enableval],
+            [use_wolfssl=no])
+
 AC_ARG_ENABLE([openssl],
             [AS_HELP_STRING([--disable-openssl],
             [Do not look for OpenSSL])],
             [use_openssl=$enableval],
             [use_openssl=yes])
 
-pkg_req_openssl="openssl >= 0.9.8"
-PKG_CHECK_MODULES(openssl, $pkg_req_openssl, have_openssl=yes, have_openssl=no)
+if test "x$use_wolfssl" = "xyes"; then
+  use_openssl=no
+else
+  pkg_req_openssl="openssl >= 0.9.8"
+  PKG_CHECK_MODULES(openssl, $pkg_req_openssl, have_openssl=yes, have_openssl=no)
+fi
+
 if test "x$have_openssl" = "xyes"; then
   if test "x$use_openssl" != "xyes"; then
     enable_openssl=no
@@ -146,6 +157,28 @@ if test "x$enable_openssl" = "xyes"; then
   ssl_provider="OpenSSL";
   ssl_requires="$pkg_req_openssl"
   AC_SUBST(ssl_requires)
+elif test "x$use_wolfssl" = "xyes"; then
+  AC_DEFINE(HAVE_WOLFSSL, 1, [Define if you have wolfSSL support])
+  AC_DEFINE(HAVE_OPENSSL, 1, [Defined to use wolfSSL compatibility layer])
+  PKG_CHECK_MODULES(
+    [wolfssl],
+    [wolfssl],
+    [],
+    [AC_MSG_ERROR([Could not find wolfSSL.])]
+  )
+  PKG_CHECK_VAR(
+    [wolfssl_includedir],
+    [wolfssl],
+    [includedir],
+    [],
+    [AC_MSG_ERROR([Could not find wolfSSL includedir variable.])]
+  )
+  wolfssl_CFLAGS="${wolfssl_CFLAGS} -DEXTERNAL_OPTS_OPENVPN -I${wolfssl_includedir}/wolfssl"
+  AC_SUBST(wolfssl_CFLAGS)
+  AC_SUBST(wolfssl_LIBS)
+  ssl_provider="wolfSSL";
+  ssl_requires="wolfssl"
+  AC_SUBST(ssl_requires)
 else
   pkg_req_gnutls="gnutls >= 2.2.0"
   pkg_req_libtasn1="libtasn1 >= 1.1"
diff --git a/cython/Makefile.am b/cython/Makefile.am
index fb9a2e4..b0a1dc4 100644
--- a/cython/Makefile.am
+++ b/cython/Makefile.am
@@ -1,7 +1,7 @@
 AM_CPPFLAGS = -I$(top_srcdir)/include
 
-AM_CFLAGS = $(GLOBAL_CFLAGS) $(libgnutls_CFLAGS) $(libtasn1_CFLAGS) $(openssl_CFLAGS) $(libplist_CFLAGS) $(LFS_CFLAGS)
-AM_LDFLAGS = $(libgnutls_LIBS) $(libtasn1_LIBS) $(openssl_LIBS) $(libplist_LIBS)
+AM_CFLAGS = $(GLOBAL_CFLAGS) $(libgnutls_CFLAGS) $(libtasn1_CFLAGS) $(openssl_CFLAGS) $(wolfssl_CFLAGS) $(libplist_CFLAGS) $(LFS_CFLAGS)
+AM_LDFLAGS = $(libgnutls_LIBS) $(libtasn1_LIBS) $(openssl_LIBS) $(wolfssl_LIBS) $(libplist_LIBS)
 
 if HAVE_CYTHON
 
diff --git a/src/Makefile.am b/src/Makefile.am
index fcde8ae..d6c2e43 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -1,7 +1,7 @@
 AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)
 
-AM_CFLAGS = $(GLOBAL_CFLAGS) $(libusbmuxd_CFLAGS) $(libgnutls_CFLAGS) $(libtasn1_CFLAGS) $(libplist_CFLAGS) $(LFS_CFLAGS) $(openssl_CFLAGS) $(PTHREAD_CFLAGS)
-AM_LDFLAGS = $(libgnutls_LIBS) $(libtasn1_LIBS) $(libplist_LIBS) $(libusbmuxd_LIBS) $(libgcrypt_LIBS) $(openssl_LIBS) $(PTHREAD_LIBS)
+AM_CFLAGS = $(GLOBAL_CFLAGS) $(libusbmuxd_CFLAGS) $(libgnutls_CFLAGS) $(libtasn1_CFLAGS) $(libplist_CFLAGS) $(LFS_CFLAGS) $(openssl_CFLAGS) $(wolfssl_CFLAGS) $(PTHREAD_CFLAGS)
+AM_LDFLAGS = $(libgnutls_LIBS) $(libtasn1_LIBS) $(libplist_LIBS) $(libusbmuxd_LIBS) $(libgcrypt_LIBS) $(openssl_LIBS) $(wolfssl_LIBS) $(PTHREAD_LIBS)
 
 lib_LTLIBRARIES = libimobiledevice.la
 libimobiledevice_la_LIBADD = $(top_builddir)/common/libinternalcommon.la
diff --git a/tools/Makefile.am b/tools/Makefile.am
index db929bb..5fa4107 100644
--- a/tools/Makefile.am
+++ b/tools/Makefile.am
@@ -1,7 +1,7 @@
 AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)
 
-AM_CFLAGS = $(GLOBAL_CFLAGS) $(libgnutls_CFLAGS) $(libtasn1_CFLAGS) $(libgcrypt_CFLAGS) $(openssl_CFLAGS) $(libplist_CFLAGS) $(LFS_CFLAGS)
-AM_LDFLAGS = $(libgnutls_LIBS) $(libtasn1_LIBS) $(libgcrypt_LIBS) $(openssl_LIBS) $(libplist_LIBS)
+AM_CFLAGS = $(GLOBAL_CFLAGS) $(libgnutls_CFLAGS) $(libtasn1_CFLAGS) $(libgcrypt_CFLAGS) $(openssl_CFLAGS) $(wolfssl_CFLAGS) $(libplist_CFLAGS) $(LFS_CFLAGS)
+AM_LDFLAGS = $(libgnutls_LIBS) $(libtasn1_LIBS) $(libgcrypt_LIBS) $(openssl_LIBS) $(wolfssl_LIBS) $(libplist_LIBS)
 
 bin_PROGRAMS = idevice_id ideviceinfo idevicename idevicepair idevicesyslog ideviceimagemounter idevicescreenshot ideviceenterrecovery idevicedate idevicebackup idevicebackup2 ideviceprovision idevicedebugserverproxy idevicediagnostics idevicedebug idevicenotificationproxy idevicecrashreport
 
diff --git a/tools/idevicebackup.c b/tools/idevicebackup.c
index 7e825de..c8dcb21 100644
--- a/tools/idevicebackup.c
+++ b/tools/idevicebackup.c
@@ -29,6 +29,9 @@
 #include <errno.h>
 #include <stdlib.h>
 #include <signal.h>
+#ifdef HAVE_WOLFSSL
+#include <openssl/ssl.h>
+#endif
 #ifdef HAVE_OPENSSL
 #include <openssl/sha.h>
 #else
-- 
2.32.0

